{"version":3,"sources":["turbopack:///[project]/src/app/tasks/page.jsx","turbopack:///[project]/src/components/ui/textarea.jsx","turbopack:///[project]/src/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\nimport { useAuth } from \"@/contexts/AuthContext\"\r\nimport { useEffect, useState } from \"react\"\r\nimport {\r\n  FileText,\r\n  Plus,\r\n  Search,\r\n  Edit,\r\n  Eye,\r\n  Play,\r\n  Square,\r\n  CheckCircle,\r\n  Clock,\r\n  AlertTriangle,\r\n  Users,\r\n  Target,\r\n  TrendingUp,\r\n  UserPlus,\r\n  X,\r\n  AlertCircle\r\n} from \"lucide-react\"\r\nimport { DashboardLayout } from \"@/components/dashboard-layout\"\r\nimport { ProtectedRoute } from \"@/components/ProtectedRoute\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { toast } from \"sonner\"\r\n\r\nexport default function TasksPage() {\r\n  return (\r\n    <ProtectedRoute>\r\n      <DashboardLayout>\r\n        <TasksPageContent />\r\n      </DashboardLayout>\r\n    </ProtectedRoute>\r\n  )\r\n}\r\n\r\nfunction TasksPageContent() {\r\n  const { user, getToken } = useAuth()\r\n  const [tasks, setTasks] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [filterStatus, setFilterStatus] = useState(\"\")\r\n  const [filterPriority, setFilterPriority] = useState(\"\")\r\n  const [showCreateModal, setShowCreateModal] = useState(false)\r\n  const [selectedTask, setSelectedTask] = useState(null)\r\n  const [stats, setStats] = useState(null)\r\n  const [employees, setEmployees] = useState([])\r\n  const [projects, setProjects] = useState([])\r\n  const [actionLoading, setActionLoading] = useState(null)\r\n  const [newTask, setNewTask] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    assignedTo: [],\r\n    dueDate: \"\",\r\n    priority: \"medium\",\r\n    category: \"\",\r\n    estimatedHours: \"\",\r\n    project: \"\"\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetchTasks()\r\n    fetchEmployees()\r\n    fetchProjects()\r\n    fetchStats()\r\n  }, [])\r\n\r\n  const fetchEmployees = async () => {\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        console.error(\"No authentication token found\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(\"/api/employees\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        console.log(\"Employees fetched successfully:\", data.data?.employees?.length || 0, \"employees\")\r\n        setEmployees(data.data?.employees || [])\r\n      } else {\r\n        const errorData = await response.json().catch(() => ({}))\r\n        console.error(\"Failed to fetch employees:\", response.status, errorData)\r\n        toast.error(\"Failed to load employees\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching employees:\", error)\r\n      toast.error(\"Error loading employees\")\r\n    }\r\n  }\r\n\r\n  const fetchProjects = async () => {\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        console.error(\"No authentication token found\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(\"/api/projects\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        console.log(\"Projects fetched successfully:\", data.data?.projects?.length || 0, \"projects\")\r\n        setProjects(data.data?.projects || [])\r\n      } else {\r\n        const errorData = await response.json().catch(() => ({}))\r\n        console.error(\"Failed to fetch projects:\", response.status, errorData)\r\n        // Projects are optional, so don't show error toast\r\n        setProjects([])\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching projects:\", error)\r\n      setProjects([])\r\n    }\r\n  }\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        console.error(\"No authentication token found\")\r\n        setLoading(false)\r\n        return\r\n      }\r\n\r\n      const response = await fetch(\"/api/tasks\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        console.log(\"Tasks fetched successfully:\", data.data?.tasks?.length || 0, \"tasks\")\r\n        setTasks(data.data?.tasks || [])\r\n      } else {\r\n        const errorData = await response.json().catch(() => ({}))\r\n        console.error(\"Failed to fetch tasks:\", response.status, errorData)\r\n        toast.error(\"Failed to load tasks\")\r\n        setTasks([])\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error)\r\n      toast.error(\"Error loading tasks\")\r\n      setTasks([])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const fetchStats = async () => {\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        console.error(\"No authentication token found\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(\"/api/tasks/stats\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        const data = await response.json()\r\n        console.log(\"Task stats fetched successfully\")\r\n        setStats(data.data?.stats || null)\r\n      } else {\r\n        const errorData = await response.json().catch(() => ({}))\r\n        console.error(\"Failed to fetch task stats:\", response.status, errorData)\r\n        setStats(null)\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching task stats:\", error)\r\n      setStats(null)\r\n    }\r\n  }\r\n\r\n  const filteredTasks = tasks.filter(task => {\r\n    const title = (task.title || \"\").toLowerCase()\r\n    const description = (task.description || \"\").toLowerCase()\r\n    const matchesSearch =\r\n      title.includes(searchTerm.toLowerCase()) ||\r\n      description.includes(searchTerm.toLowerCase())\r\n\r\n    const matchesStatus = !filterStatus || filterStatus === \"all\" || task.status === filterStatus\r\n    const matchesPriority = !filterPriority || filterPriority === \"all\" || task.priority === filterPriority\r\n    return matchesSearch && matchesStatus && matchesPriority\r\n  })\r\n\r\n  const getStatusIcon = status => {\r\n    switch (status) {\r\n      case \"completed\":\r\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />\r\n      case \"in_progress\":\r\n        return <Clock className=\"w-4 h-4 text-blue-500\" />\r\n      case \"pending\":\r\n        return <FileText className=\"w-4 h-4 text-gray-500\" />\r\n      case \"overdue\":\r\n        return <AlertTriangle className=\"w-4 h-4 text-red-500\" />\r\n      default:\r\n        return <FileText className=\"w-4 h-4 text-gray-500\" />\r\n    }\r\n  }\r\n\r\n  const getPriorityColor = priority => {\r\n    switch (priority) {\r\n      case \"high\":\r\n        return \"text-red-600 bg-red-100\"\r\n      case \"medium\":\r\n        return \"text-yellow-600 bg-yellow-100\"\r\n      case \"low\":\r\n        return \"text-green-600 bg-green-100\"\r\n      default:\r\n        return \"text-gray-600 bg-gray-100\"\r\n    }\r\n  }\r\n\r\n  const handleStartTask = async taskId => {\r\n    setActionLoading(taskId)\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        toast.error(\"Authentication required\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(`/api/tasks/${taskId}/start`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        fetchTasks()\r\n        fetchStats()\r\n        toast.success(\"Task started successfully\")\r\n      } else if (response.status === 403) {\r\n        toast.error(\"You don't have permission to start this task.\")\r\n      } else {\r\n        toast.error(\"Failed to start task. Please try again.\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error starting task:\", error)\r\n      toast.error(\"An error occurred while starting the task.\")\r\n    } finally {\r\n      setActionLoading(null)\r\n    }\r\n  }\r\n\r\n  const handleStopTask = async taskId => {\r\n    setActionLoading(taskId)\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        toast.error(\"Authentication required\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(`/api/tasks/${taskId}/stop`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        fetchTasks()\r\n        fetchStats()\r\n        toast.success(\"Task timer stopped\")\r\n      } else if (response.status === 403) {\r\n        toast.error(\"You don't have permission to stop this task.\")\r\n      } else {\r\n        toast.error(\"Failed to stop task. Please try again.\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error stopping task:\", error)\r\n      toast.error(\"An error occurred while stopping the task.\")\r\n    } finally {\r\n      setActionLoading(null)\r\n    }\r\n  }\r\n\r\n  const handleCompleteTask = async taskId => {\r\n    setActionLoading(taskId)\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        toast.error(\"Authentication required\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(`/api/tasks/${taskId}/complete`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-Type\": \"application/json\"\r\n        }\r\n      })\r\n\r\n      if (response.ok) {\r\n        fetchTasks()\r\n        fetchStats()\r\n        toast.success(\"Task completed successfully\")\r\n      } else if (response.status === 403) {\r\n        toast.error(\"You don't have permission to complete this task.\")\r\n      } else {\r\n        toast.error(\"Failed to complete task. Please try again.\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error completing task:\", error)\r\n      toast.error(\"An error occurred while completing the task.\")\r\n    } finally {\r\n      setActionLoading(null)\r\n    }\r\n  }\r\n\r\n  const handleCreateTask = async e => {\r\n    e.preventDefault()\r\n    try {\r\n      const taskData = {\r\n        ...newTask,\r\n        assignedTo: newTask.assignedTo.filter(id => id), // Remove empty values\r\n        project: newTask.project === \"none\" ? \"\" : newTask.project // Convert \"none\" to empty string\r\n      }\r\n\r\n      const token = getToken()\r\n      if (!token) {\r\n        toast.error(\"Authentication required\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(\"/api/tasks\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(taskData)\r\n      })\r\n\r\n      if (response.ok) {\r\n        setShowCreateModal(false)\r\n        setNewTask({\r\n          title: \"\",\r\n          description: \"\",\r\n          assignedTo: [],\r\n          dueDate: \"\",\r\n          priority: \"medium\",\r\n          category: \"\",\r\n          estimatedHours: \"\",\r\n          project: \"\"\r\n        })\r\n        fetchTasks()\r\n        fetchStats()\r\n        toast.success(\"Task created successfully\")\r\n      } else {\r\n        const error = await response.json()\r\n        toast.error(error.error || \"Failed to create task\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating task:\", error)\r\n      toast.error(\"Failed to create task\")\r\n    }\r\n  }\r\n\r\n  const handleAddAssignee = async (taskId, userId) => {\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        toast.error(\"Authentication required\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(`/api/tasks/${taskId}/assignees`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      })\r\n\r\n      if (response.ok) {\r\n        fetchTasks()\r\n        toast.success(\"Assignee added successfully\")\r\n      } else {\r\n        toast.error(\"Failed to add assignee\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding assignee:\", error)\r\n      toast.error(\"Failed to add assignee\")\r\n    }\r\n  }\r\n\r\n  const handleRemoveAssignee = async (taskId, userId) => {\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        toast.error(\"Authentication required\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(`/api/tasks/${taskId}/assignees`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ userId })\r\n      })\r\n\r\n      if (response.ok) {\r\n        fetchTasks()\r\n        toast.success(\"Assignee removed successfully\")\r\n      } else {\r\n        toast.error(\"Failed to remove assignee\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error removing assignee:\", error)\r\n      toast.error(\"Failed to remove assignee\")\r\n    }\r\n  }\r\n\r\n  const handleUpdateProgress = async (taskId, percentage, phase) => {\r\n    try {\r\n      const token = getToken()\r\n      if (!token) {\r\n        toast.error(\"Authentication required\")\r\n        return\r\n      }\r\n\r\n      const response = await fetch(`/api/tasks/${taskId}/progress`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ percentage, phase })\r\n      })\r\n\r\n      if (response.ok) {\r\n        fetchTasks()\r\n        toast.success(\"Progress updated successfully\")\r\n      } else {\r\n        toast.error(\"Failed to update progress\")\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating progress:\", error)\r\n      toast.error(\"Failed to update progress\")\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"p-6\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"flex items-center justify-center h-64\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const canCreateTasks = user?.role === 'admin' ||\r\n    user?.role === 'project_manager' ||\r\n    (user?.role === 'employee' && user?.designation === 'project_manager');\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Task Management</h1>\r\n          <p className=\"text-muted-foreground\">\r\n            Manage and track all tasks with multiple assignees and progress monitoring\r\n          </p>\r\n        </div>\r\n        {canCreateTasks && (\r\n          <Dialog open={showCreateModal} onOpenChange={setShowCreateModal}>\r\n            <DialogTrigger asChild>\r\n              <Button>\r\n                <Plus className=\"mr-2 h-4 w-4\" />\r\n                Create Task\r\n              </Button>\r\n            </DialogTrigger>\r\n            <DialogContent className=\"max-w-2xl\">\r\n              <DialogHeader>\r\n                <DialogTitle>Create New Task</DialogTitle>\r\n                <DialogDescription>\r\n                  Create a task and assign it to one or more team members\r\n                </DialogDescription>\r\n              </DialogHeader>\r\n              <form onSubmit={handleCreateTask} className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"title\">Task Title</Label>\r\n                    <Input\r\n                      id=\"title\"\r\n                      value={newTask.title}\r\n                      onChange={(e) => setNewTask({...newTask, title: e.target.value})}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"category\">Category</Label>\r\n                    <Input\r\n                      id=\"category\"\r\n                      value={newTask.category}\r\n                      onChange={(e) => setNewTask({...newTask, category: e.target.value})}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"description\">Description</Label>\r\n                  <Textarea\r\n                    id=\"description\"\r\n                    value={newTask.description}\r\n                    onChange={(e) => setNewTask({...newTask, description: e.target.value})}\r\n                    rows={3}\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"project\">Project (Optional)</Label>\r\n                    <Select value={newTask.project} onValueChange={(value) => setNewTask({...newTask, project: value})}>\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Select project\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"none\">No Project</SelectItem>\r\n                        {projects.map((project) => (\r\n                          <SelectItem key={project._id} value={project._id}>\r\n                            {project.name}\r\n                          </SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"priority\">Priority</Label>\r\n                    <Select value={newTask.priority} onValueChange={(value) => setNewTask({...newTask, priority: value})}>\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"low\">Low</SelectItem>\r\n                        <SelectItem value=\"medium\">Medium</SelectItem>\r\n                        <SelectItem value=\"high\">High</SelectItem>\r\n                        <SelectItem value=\"critical\">Critical</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"dueDate\">Due Date</Label>\r\n                    <Input\r\n                      id=\"dueDate\"\r\n                      type=\"date\"\r\n                      value={newTask.dueDate}\r\n                      onChange={(e) => setNewTask({...newTask, dueDate: e.target.value})}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"estimatedHours\">Estimated Hours</Label>\r\n                    <Input\r\n                      id=\"estimatedHours\"\r\n                      type=\"number\"\r\n                      value={newTask.estimatedHours}\r\n                      onChange={(e) => setNewTask({...newTask, estimatedHours: e.target.value})}\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label>Assign To (Select one or more employees)</Label>\r\n                  <div className=\"border rounded-lg p-3 space-y-2\">\r\n                    {newTask.assignedTo.map((userId, index) => {\r\n                      const employee = employees.find(e => e._id === userId);\r\n                      return (\r\n                        <div key={index} className=\"flex items-center justify-between bg-muted p-2 rounded\">\r\n                          <div>\r\n                            <span className=\"font-medium\">{employee?.firstName} {employee?.lastName}</span>\r\n                            <span className=\"text-sm text-muted-foreground ml-2\">- {employee?.designation}</span>\r\n                          </div>\r\n                          <Button\r\n                            type=\"button\"\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                              const updated = newTask.assignedTo.filter((_, i) => i !== index);\r\n                              setNewTask({...newTask, assignedTo: updated});\r\n                            }}\r\n                          >\r\n                            <X className=\"h-4 w-4\" />\r\n                          </Button>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                    <Select\r\n                      onValueChange={(value) => {\r\n                        if (value && !newTask.assignedTo.includes(value)) {\r\n                          setNewTask({\r\n                            ...newTask,\r\n                            assignedTo: [...newTask.assignedTo, value]\r\n                          });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue placeholder=\"Select employee(s)\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {employees\r\n                          .filter(emp => !newTask.assignedTo.includes(emp._id))\r\n                          .map((emp) => (\r\n                            <SelectItem key={emp._id} value={emp._id}>\r\n                              {emp.firstName} {emp.lastName} - {emp.designation}\r\n                            </SelectItem>\r\n                          ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex justify-end space-x-2\">\r\n                  <Button type=\"button\" variant=\"outline\" onClick={() => setShowCreateModal(false)}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button type=\"submit\">Create Task</Button>\r\n                </div>\r\n              </form>\r\n            </DialogContent>\r\n          </Dialog>\r\n        )}\r\n      </div>\r\n\r\n      {/* Stats Cards */}\r\n      {stats && (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Total Tasks</CardTitle>\r\n              <FileText className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold\">{stats.totalTasks || 0}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">In Progress</CardTitle>\r\n              <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-blue-600\">{stats.byStatus?.in_progress || 0}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Completed</CardTitle>\r\n              <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-green-600\">{stats.byStatus?.completed || 0}</div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n              <CardTitle className=\"text-sm font-medium\">Overdue</CardTitle>\r\n              <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"text-2xl font-bold text-red-600\">{stats.overdueTasks || 0}</div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      {/* Filters */}\r\n      <Card>\r\n        <CardContent className=\"pt-6\">\r\n          <div className=\"flex flex-col sm:flex-row gap-4\">\r\n            <div className=\"flex-1 relative\">\r\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground w-4 h-4\" />\r\n              <Input\r\n                placeholder=\"Search tasks...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                className=\"pl-10\"\r\n              />\r\n            </div>\r\n\r\n            <Select value={filterStatus} onValueChange={setFilterStatus}>\r\n              <SelectTrigger className=\"w-40\">\r\n                <SelectValue placeholder=\"All Status\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Status</SelectItem>\r\n                <SelectItem value=\"pending\">Pending</SelectItem>\r\n                <SelectItem value=\"in_progress\">In Progress</SelectItem>\r\n                <SelectItem value=\"completed\">Completed</SelectItem>\r\n                <SelectItem value=\"overdue\">Overdue</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Select value={filterPriority} onValueChange={setFilterPriority}>\r\n              <SelectTrigger className=\"w-40\">\r\n                <SelectValue placeholder=\"All Priority\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"all\">All Priority</SelectItem>\r\n                <SelectItem value=\"low\">Low</SelectItem>\r\n                <SelectItem value=\"medium\">Medium</SelectItem>\r\n                <SelectItem value=\"high\">High</SelectItem>\r\n                <SelectItem value=\"critical\">Critical</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Tasks Table */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Tasks</CardTitle>\r\n          <CardDescription>\r\n            {filteredTasks.length} of {tasks.length} tasks\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {filteredTasks.length === 0 ? (\r\n            <div className=\"text-center py-8\">\r\n              <FileText className=\"mx-auto h-12 w-12 text-muted-foreground\" />\r\n              <h3 className=\"mt-2 text-sm font-semibold\">No tasks found</h3>\r\n              <p className=\"mt-1 text-sm text-muted-foreground\">\r\n                Try adjusting your search or filters\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Task</TableHead>\r\n                    <TableHead>Assignees</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Priority</TableHead>\r\n                    <TableHead>Progress</TableHead>\r\n                    <TableHead>Due Date</TableHead>\r\n                    <TableHead>Actions</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {filteredTasks.map((task) => (\r\n                    <TableRow key={task._id}>\r\n                      <TableCell>\r\n                        <div>\r\n                          <div className=\"font-medium\">{task.title}</div>\r\n                          <div className=\"text-sm text-muted-foreground line-clamp-1\">\r\n                            {task.description}\r\n                          </div>\r\n                          {task.project && (\r\n                            <Badge variant=\"outline\" className=\"mt-1\">\r\n                              {task.project.name}\r\n                            </Badge>\r\n                          )}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {task.assignedTo?.map((assignee, index) => (\r\n                            <Badge key={index} variant=\"secondary\" className=\"text-xs\">\r\n                              {assignee.user?.firstName} {assignee.user?.lastName}\r\n                            </Badge>\r\n                          )) || <span className=\"text-muted-foreground\">Unassigned</span>}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Badge\r\n                          variant={\r\n                            task.status === 'completed' ? 'default' :\r\n                            task.status === 'in_progress' ? 'secondary' :\r\n                            task.status === 'overdue' ? 'destructive' : 'outline'\r\n                          }\r\n                        >\r\n                          {task.status.replace('_', ' ')}\r\n                        </Badge>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Badge className={getPriorityColor(task.priority)}>\r\n                          {task.priority}\r\n                        </Badge>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div className=\"space-y-1\">\r\n                          <Progress value={task.progress?.percentage || 0} className=\"w-16\" />\r\n                          <div className=\"text-xs text-muted-foreground\">\r\n                            {task.progress?.percentage || 0}%\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {task.dueDate ? new Date(task.dueDate).toLocaleDateString() : '-'}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div className=\"flex gap-1\">\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => setSelectedTask(task)}\r\n                          >\r\n                            <Eye className=\"h-4 w-4\" />\r\n                          </Button>\r\n\r\n                          {/* Action buttons for assigned users */}\r\n                          {task.assignedTo?.some(a => a.user._id === user._id) && (\r\n                            <>\r\n                              {task.status === 'pending' && (\r\n                                <Button\r\n                                  variant=\"ghost\"\r\n                                  size=\"sm\"\r\n                                  onClick={() => handleStartTask(task._id)}\r\n                                  disabled={actionLoading === task._id}\r\n                                >\r\n                                  <Play className=\"h-4 w-4\" />\r\n                                </Button>\r\n                              )}\r\n                              {task.status === 'in_progress' && (\r\n                                <>\r\n                                  <Button\r\n                                    variant=\"ghost\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => handleStopTask(task._id)}\r\n                                    disabled={actionLoading === task._id}\r\n                                  >\r\n                                    <Square className=\"h-4 w-4\" />\r\n                                  </Button>\r\n                                  <Button\r\n                                    variant=\"ghost\"\r\n                                    size=\"sm\"\r\n                                    onClick={() => handleCompleteTask(task._id)}\r\n                                    disabled={actionLoading === task._id}\r\n                                  >\r\n                                    <CheckCircle className=\"h-4 w-4\" />\r\n                                  </Button>\r\n                                </>\r\n                              )}\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Task Details Dialog */}\r\n      {selectedTask && (\r\n        <Dialog open={!!selectedTask} onOpenChange={() => setSelectedTask(null)}>\r\n          <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-y-auto\">\r\n            <DialogHeader>\r\n              <DialogTitle>{selectedTask.title}</DialogTitle>\r\n              <DialogDescription>{selectedTask.description}</DialogDescription>\r\n            </DialogHeader>\r\n\r\n            <div className=\"space-y-6\">\r\n              {/* Task Overview */}\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                <div className=\"text-center p-4 bg-muted rounded-lg\">\r\n                  <div className=\"text-2xl font-bold\">{selectedTask.progress?.percentage || 0}%</div>\r\n                  <div className=\"text-sm text-muted-foreground\">Progress</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-muted rounded-lg\">\r\n                  <div className=\"text-2xl font-bold\">{selectedTask.assignedTo?.length || 0}</div>\r\n                  <div className=\"text-sm text-muted-foreground\">Assignees</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-muted rounded-lg\">\r\n                  <div className=\"text-2xl font-bold\">{selectedTask.timeTracking?.totalTimeSpent ? Math.round(selectedTask.timeTracking.totalTimeSpent / (1000 * 60 * 60)) : 0}h</div>\r\n                  <div className=\"text-sm text-muted-foreground\">Time Spent</div>\r\n                </div>\r\n                <div className=\"text-center p-4 bg-muted rounded-lg\">\r\n                  <div className=\"text-2xl font-bold\">{selectedTask.daysUntilDue || 0}</div>\r\n                  <div className=\"text-sm text-muted-foreground\">Days Left</div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Task Details */}\r\n              <div className=\"grid grid-cols-2 gap-6\">\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"text-lg font-semibold\">Task Information</h3>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-muted-foreground\">Status:</span>\r\n                      <Badge\r\n                        variant={\r\n                          selectedTask.status === 'completed' ? 'default' :\r\n                          selectedTask.status === 'in_progress' ? 'secondary' :\r\n                          selectedTask.status === 'overdue' ? 'destructive' : 'outline'\r\n                        }\r\n                      >\r\n                        {selectedTask.status.replace('_', ' ')}\r\n                      </Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-muted-foreground\">Priority:</span>\r\n                      <Badge className={getPriorityColor(selectedTask.priority)}>\r\n                        {selectedTask.priority}\r\n                      </Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-muted-foreground\">Due Date:</span>\r\n                      <span>{new Date(selectedTask.dueDate).toLocaleDateString()}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-muted-foreground\">Estimated Hours:</span>\r\n                      <span>{selectedTask.estimatedHours || '-'}</span>\r\n                    </div>\r\n                    {selectedTask.project && (\r\n                      <div className=\"flex justify-between\">\r\n                        <span className=\"text-muted-foreground\">Project:</span>\r\n                        <span>{selectedTask.project.name}</span>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"text-lg font-semibold\">Assignees</h3>\r\n                  <div className=\"space-y-2\">\r\n                    {selectedTask.assignedTo?.map((assignee, index) => (\r\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-muted rounded\">\r\n                        <div>\r\n                          <div className=\"font-medium\">\r\n                            {assignee.user?.firstName} {assignee.user?.lastName}\r\n                          </div>\r\n                          <div className=\"text-sm text-muted-foreground\">\r\n                            {assignee.role}\r\n                          </div>\r\n                        </div>\r\n                        <Badge variant=\"outline\">{assignee.user?.designation}</Badge>\r\n                      </div>\r\n                    )) || (\r\n                      <div className=\"text-muted-foreground\">No assignees</div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Progress Update Section */}\r\n              {selectedTask.assignedTo?.some(a => a.user._id === user._id) && (\r\n                <div className=\"space-y-4\">\r\n                  <h3 className=\"text-lg font-semibold\">Update Progress</h3>\r\n                  <div className=\"flex gap-4\">\r\n                    <div className=\"flex-1\">\r\n                      <Label htmlFor=\"progress\">Progress (%)</Label>\r\n                      <Input\r\n                        id=\"progress\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        placeholder=\"Enter progress percentage\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <Label htmlFor=\"phase\">Current Phase</Label>\r\n                      <Select>\r\n                        <SelectTrigger>\r\n                          <SelectValue placeholder=\"Select phase\" />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"planning\">Planning</SelectItem>\r\n                          <SelectItem value=\"development\">Development</SelectItem>\r\n                          <SelectItem value=\"testing\">Testing</SelectItem>\r\n                          <SelectItem value=\"review\">Review</SelectItem>\r\n                          <SelectItem value=\"deployment\">Deployment</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </div>\r\n                    <div className=\"flex items-end\">\r\n                      <Button onClick={() => {\r\n                        const progressInput = document.getElementById('progress');\r\n                        const phaseSelect = document.querySelector('[name=\"phase\"]');\r\n                        handleUpdateProgress(\r\n                          selectedTask._id,\r\n                          parseInt(progressInput.value) || 0,\r\n                          phaseSelect?.value || ''\r\n                        );\r\n                      }}>\r\n                        Update\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Textarea = React.forwardRef(({ className, ...props }, ref) => {\r\n  return (\r\n    <textarea\r\n      className={cn(\r\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }","import * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}"],"names":[],"mappings":"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"}